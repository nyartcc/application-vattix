---
name: 01 Build and Push Docker Image

on:
  push:
    branches:
      - master
    pull_requests:

jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Set up QEMU
        uses: actions/setup-qemu@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to github container registry
        uses: actions/github-login@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}


      - name: Run Trivy for all CVEs (non-blocking)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ github.run_id }}
          exit-code: 0
          format: table

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: nyartcc/{{ github.reposity.name }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=04
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64, linux/arm64, linux/arm/v7

      - name: Find comment for image tags
        uses: peter-evans/find-comment@v1
        if: github.event.name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Docker image tag(s) pushed

        # If PR, put image tags in the PR comment
        - name: Create or update comment for image tags
          uses: peter-evans/create-or-update-comment@v1
          if: github.event_name == 'pull_request'
          with:
            comment-id: ${{ steps.fc.outputs.comment_id }}
            issue-number: ${{ github.event.pull_request.number }}
            body: |
              Docker image tag(s) pushed:
              ```text
              ${{ steps.docker_meta.outputs.tags }}
              ```
              
              Labels added to images:
              ```text
              ${{ steps.docker_meta.outputs.labels }}
              ```
            edit-mode: replace

